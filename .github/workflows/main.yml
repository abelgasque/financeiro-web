name: Deploy in Github pages

on:
  push:
    branches: 'main'
    tags: 'v*'

jobs:
  report-started:
    name: Publish in Docker Hub
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Notify Discord (Build Started)
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d '{"username": "Bot Docker", "content": "üöÄ **Build iniciado!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Produ√ß√£o\nBranch: `${{ github.ref_name }}`"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }} || true

  publish-docker:
    name: Publish in Docker Hub
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4


    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '12.x'

    - name: Install dependencies
      run: npm install --legacy-peer-deps
  
    - name: Build Angular App
      run: npm run build --configuration=production
  
    - name: Auth into Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    
    - name: Push Docker Image
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -t ${{ github.repository }} .
        docker push ${{ github.repository }}
    
    - name: Push Docker Image new version
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        docker build -t ${{ github.repository }}:${{ github.ref_name }} .
        docker push ${{ github.repository }}:${{ github.ref_name }}

  report-status:
    name: Report Build Status
    needs: [publish-docker]
    environment: production
    runs-on: ubuntu-latest

    steps:
    - name: Notify Discord (Success)
      if: success()
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot GitHub", "content": "‚úÖ **Sucesso ao gerar vers√£o!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Produ√ß√£o\nBranch: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }} || true

    - name: Notify Discord (Failure)
      if: failure()
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot GitHub", "content": "‚ùå **Falha ao gerar vers√£o!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Produ√ß√£o\nBranch: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }} || true